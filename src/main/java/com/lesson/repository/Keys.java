/*
 * This file is generated by jOOQ.
 */
package com.lesson.repository;


import com.lesson.repository.tables.EduAttendance;
import com.lesson.repository.tables.EduCampus;
import com.lesson.repository.tables.EduClass;
import com.lesson.repository.tables.EduClassCoach;
import com.lesson.repository.tables.EduClassStudent;
import com.lesson.repository.tables.EduClassroom;
import com.lesson.repository.tables.EduCoach;
import com.lesson.repository.tables.EduCoachQualification;
import com.lesson.repository.tables.EduCourse;
import com.lesson.repository.tables.EduCourseCategory;
import com.lesson.repository.tables.EduCourseChapter;
import com.lesson.repository.tables.EduCourseLesson;
import com.lesson.repository.tables.EduDashboard;
import com.lesson.repository.tables.EduDataExport;
import com.lesson.repository.tables.EduExpense;
import com.lesson.repository.tables.EduExpenseType;
import com.lesson.repository.tables.EduInstitution;
import com.lesson.repository.tables.EduInvoice;
import com.lesson.repository.tables.EduPayment;
import com.lesson.repository.tables.EduSchedule;
import com.lesson.repository.tables.EduStatisticsReport;
import com.lesson.repository.tables.EduStudent;
import com.lesson.repository.tables.SysConfig;
import com.lesson.repository.tables.SysDictData;
import com.lesson.repository.tables.SysDictType;
import com.lesson.repository.tables.SysLog;
import com.lesson.repository.tables.SysLoginLog;
import com.lesson.repository.tables.SysNotice;
import com.lesson.repository.tables.SysOperationLog;
import com.lesson.repository.tables.SysPermission;
import com.lesson.repository.tables.SysRole;
import com.lesson.repository.tables.SysRolePermission;
import com.lesson.repository.tables.SysUser;
import com.lesson.repository.tables.records.EduAttendanceRecord;
import com.lesson.repository.tables.records.EduCampusRecord;
import com.lesson.repository.tables.records.EduClassCoachRecord;
import com.lesson.repository.tables.records.EduClassRecord;
import com.lesson.repository.tables.records.EduClassStudentRecord;
import com.lesson.repository.tables.records.EduClassroomRecord;
import com.lesson.repository.tables.records.EduCoachQualificationRecord;
import com.lesson.repository.tables.records.EduCoachRecord;
import com.lesson.repository.tables.records.EduCourseCategoryRecord;
import com.lesson.repository.tables.records.EduCourseChapterRecord;
import com.lesson.repository.tables.records.EduCourseLessonRecord;
import com.lesson.repository.tables.records.EduCourseRecord;
import com.lesson.repository.tables.records.EduDashboardRecord;
import com.lesson.repository.tables.records.EduDataExportRecord;
import com.lesson.repository.tables.records.EduExpenseRecord;
import com.lesson.repository.tables.records.EduExpenseTypeRecord;
import com.lesson.repository.tables.records.EduInstitutionRecord;
import com.lesson.repository.tables.records.EduInvoiceRecord;
import com.lesson.repository.tables.records.EduPaymentRecord;
import com.lesson.repository.tables.records.EduScheduleRecord;
import com.lesson.repository.tables.records.EduStatisticsReportRecord;
import com.lesson.repository.tables.records.EduStudentRecord;
import com.lesson.repository.tables.records.SysConfigRecord;
import com.lesson.repository.tables.records.SysDictDataRecord;
import com.lesson.repository.tables.records.SysDictTypeRecord;
import com.lesson.repository.tables.records.SysLogRecord;
import com.lesson.repository.tables.records.SysLoginLogRecord;
import com.lesson.repository.tables.records.SysNoticeRecord;
import com.lesson.repository.tables.records.SysOperationLogRecord;
import com.lesson.repository.tables.records.SysPermissionRecord;
import com.lesson.repository.tables.records.SysRolePermissionRecord;
import com.lesson.repository.tables.records.SysRoleRecord;
import com.lesson.repository.tables.records.SysUserRecord;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * lesson.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<EduAttendanceRecord> KEY_EDU_ATTENDANCE_PRIMARY = Internal.createUniqueKey(EduAttendance.EDU_ATTENDANCE, DSL.name("KEY_edu_attendance_PRIMARY"), new TableField[] { EduAttendance.EDU_ATTENDANCE.ID }, true);
    public static final UniqueKey<EduAttendanceRecord> KEY_EDU_ATTENDANCE_UK_SCHEDULE_STUDENT = Internal.createUniqueKey(EduAttendance.EDU_ATTENDANCE, DSL.name("KEY_edu_attendance_uk_schedule_student"), new TableField[] { EduAttendance.EDU_ATTENDANCE.SCHEDULE_ID, EduAttendance.EDU_ATTENDANCE.STUDENT_ID }, true);
    public static final UniqueKey<EduCampusRecord> KEY_EDU_CAMPUS_PRIMARY = Internal.createUniqueKey(EduCampus.EDU_CAMPUS, DSL.name("KEY_edu_campus_PRIMARY"), new TableField[] { EduCampus.EDU_CAMPUS.ID }, true);
    public static final UniqueKey<EduCampusRecord> KEY_EDU_CAMPUS_UK_CODE = Internal.createUniqueKey(EduCampus.EDU_CAMPUS, DSL.name("KEY_edu_campus_uk_code"), new TableField[] { EduCampus.EDU_CAMPUS.CODE }, true);
    public static final UniqueKey<EduClassRecord> KEY_EDU_CLASS_PRIMARY = Internal.createUniqueKey(EduClass.EDU_CLASS, DSL.name("KEY_edu_class_PRIMARY"), new TableField[] { EduClass.EDU_CLASS.ID }, true);
    public static final UniqueKey<EduClassRecord> KEY_EDU_CLASS_UK_CODE = Internal.createUniqueKey(EduClass.EDU_CLASS, DSL.name("KEY_edu_class_uk_code"), new TableField[] { EduClass.EDU_CLASS.CODE }, true);
    public static final UniqueKey<EduClassCoachRecord> KEY_EDU_CLASS_COACH_PRIMARY = Internal.createUniqueKey(EduClassCoach.EDU_CLASS_COACH, DSL.name("KEY_edu_class_coach_PRIMARY"), new TableField[] { EduClassCoach.EDU_CLASS_COACH.ID }, true);
    public static final UniqueKey<EduClassCoachRecord> KEY_EDU_CLASS_COACH_UK_CLASS_COACH = Internal.createUniqueKey(EduClassCoach.EDU_CLASS_COACH, DSL.name("KEY_edu_class_coach_uk_class_coach"), new TableField[] { EduClassCoach.EDU_CLASS_COACH.CLASS_ID, EduClassCoach.EDU_CLASS_COACH.COACH_ID }, true);
    public static final UniqueKey<EduClassStudentRecord> KEY_EDU_CLASS_STUDENT_PRIMARY = Internal.createUniqueKey(EduClassStudent.EDU_CLASS_STUDENT, DSL.name("KEY_edu_class_student_PRIMARY"), new TableField[] { EduClassStudent.EDU_CLASS_STUDENT.ID }, true);
    public static final UniqueKey<EduClassStudentRecord> KEY_EDU_CLASS_STUDENT_UK_CLASS_STUDENT = Internal.createUniqueKey(EduClassStudent.EDU_CLASS_STUDENT, DSL.name("KEY_edu_class_student_uk_class_student"), new TableField[] { EduClassStudent.EDU_CLASS_STUDENT.CLASS_ID, EduClassStudent.EDU_CLASS_STUDENT.STUDENT_ID }, true);
    public static final UniqueKey<EduClassroomRecord> KEY_EDU_CLASSROOM_PRIMARY = Internal.createUniqueKey(EduClassroom.EDU_CLASSROOM, DSL.name("KEY_edu_classroom_PRIMARY"), new TableField[] { EduClassroom.EDU_CLASSROOM.ID }, true);
    public static final UniqueKey<EduClassroomRecord> KEY_EDU_CLASSROOM_UK_CODE = Internal.createUniqueKey(EduClassroom.EDU_CLASSROOM, DSL.name("KEY_edu_classroom_uk_code"), new TableField[] { EduClassroom.EDU_CLASSROOM.CODE }, true);
    public static final UniqueKey<EduCoachRecord> KEY_EDU_COACH_PRIMARY = Internal.createUniqueKey(EduCoach.EDU_COACH, DSL.name("KEY_edu_coach_PRIMARY"), new TableField[] { EduCoach.EDU_COACH.ID }, true);
    public static final UniqueKey<EduCoachRecord> KEY_EDU_COACH_UK_CODE = Internal.createUniqueKey(EduCoach.EDU_COACH, DSL.name("KEY_edu_coach_uk_code"), new TableField[] { EduCoach.EDU_COACH.CODE }, true);
    public static final UniqueKey<EduCoachQualificationRecord> KEY_EDU_COACH_QUALIFICATION_PRIMARY = Internal.createUniqueKey(EduCoachQualification.EDU_COACH_QUALIFICATION, DSL.name("KEY_edu_coach_qualification_PRIMARY"), new TableField[] { EduCoachQualification.EDU_COACH_QUALIFICATION.ID }, true);
    public static final UniqueKey<EduCourseRecord> KEY_EDU_COURSE_PRIMARY = Internal.createUniqueKey(EduCourse.EDU_COURSE, DSL.name("KEY_edu_course_PRIMARY"), new TableField[] { EduCourse.EDU_COURSE.ID }, true);
    public static final UniqueKey<EduCourseRecord> KEY_EDU_COURSE_UK_CODE = Internal.createUniqueKey(EduCourse.EDU_COURSE, DSL.name("KEY_edu_course_uk_code"), new TableField[] { EduCourse.EDU_COURSE.CODE }, true);
    public static final UniqueKey<EduCourseCategoryRecord> KEY_EDU_COURSE_CATEGORY_PRIMARY = Internal.createUniqueKey(EduCourseCategory.EDU_COURSE_CATEGORY, DSL.name("KEY_edu_course_category_PRIMARY"), new TableField[] { EduCourseCategory.EDU_COURSE_CATEGORY.ID }, true);
    public static final UniqueKey<EduCourseCategoryRecord> KEY_EDU_COURSE_CATEGORY_UK_CODE = Internal.createUniqueKey(EduCourseCategory.EDU_COURSE_CATEGORY, DSL.name("KEY_edu_course_category_uk_code"), new TableField[] { EduCourseCategory.EDU_COURSE_CATEGORY.CODE }, true);
    public static final UniqueKey<EduCourseChapterRecord> KEY_EDU_COURSE_CHAPTER_PRIMARY = Internal.createUniqueKey(EduCourseChapter.EDU_COURSE_CHAPTER, DSL.name("KEY_edu_course_chapter_PRIMARY"), new TableField[] { EduCourseChapter.EDU_COURSE_CHAPTER.ID }, true);
    public static final UniqueKey<EduCourseLessonRecord> KEY_EDU_COURSE_LESSON_PRIMARY = Internal.createUniqueKey(EduCourseLesson.EDU_COURSE_LESSON, DSL.name("KEY_edu_course_lesson_PRIMARY"), new TableField[] { EduCourseLesson.EDU_COURSE_LESSON.ID }, true);
    public static final UniqueKey<EduDashboardRecord> KEY_EDU_DASHBOARD_PRIMARY = Internal.createUniqueKey(EduDashboard.EDU_DASHBOARD, DSL.name("KEY_edu_dashboard_PRIMARY"), new TableField[] { EduDashboard.EDU_DASHBOARD.ID }, true);
    public static final UniqueKey<EduDataExportRecord> KEY_EDU_DATA_EXPORT_PRIMARY = Internal.createUniqueKey(EduDataExport.EDU_DATA_EXPORT, DSL.name("KEY_edu_data_export_PRIMARY"), new TableField[] { EduDataExport.EDU_DATA_EXPORT.ID }, true);
    public static final UniqueKey<EduExpenseRecord> KEY_EDU_EXPENSE_PRIMARY = Internal.createUniqueKey(EduExpense.EDU_EXPENSE, DSL.name("KEY_edu_expense_PRIMARY"), new TableField[] { EduExpense.EDU_EXPENSE.ID }, true);
    public static final UniqueKey<EduExpenseTypeRecord> KEY_EDU_EXPENSE_TYPE_PRIMARY = Internal.createUniqueKey(EduExpenseType.EDU_EXPENSE_TYPE, DSL.name("KEY_edu_expense_type_PRIMARY"), new TableField[] { EduExpenseType.EDU_EXPENSE_TYPE.ID }, true);
    public static final UniqueKey<EduExpenseTypeRecord> KEY_EDU_EXPENSE_TYPE_UK_CODE = Internal.createUniqueKey(EduExpenseType.EDU_EXPENSE_TYPE, DSL.name("KEY_edu_expense_type_uk_code"), new TableField[] { EduExpenseType.EDU_EXPENSE_TYPE.CODE }, true);
    public static final UniqueKey<EduInstitutionRecord> KEY_EDU_INSTITUTION_PRIMARY = Internal.createUniqueKey(EduInstitution.EDU_INSTITUTION, DSL.name("KEY_edu_institution_PRIMARY"), new TableField[] { EduInstitution.EDU_INSTITUTION.ID }, true);
    public static final UniqueKey<EduInstitutionRecord> KEY_EDU_INSTITUTION_UK_CODE = Internal.createUniqueKey(EduInstitution.EDU_INSTITUTION, DSL.name("KEY_edu_institution_uk_code"), new TableField[] { EduInstitution.EDU_INSTITUTION.CODE }, true);
    public static final UniqueKey<EduInvoiceRecord> KEY_EDU_INVOICE_PRIMARY = Internal.createUniqueKey(EduInvoice.EDU_INVOICE, DSL.name("KEY_edu_invoice_PRIMARY"), new TableField[] { EduInvoice.EDU_INVOICE.ID }, true);
    public static final UniqueKey<EduInvoiceRecord> KEY_EDU_INVOICE_UK_PAYMENT_ID = Internal.createUniqueKey(EduInvoice.EDU_INVOICE, DSL.name("KEY_edu_invoice_uk_payment_id"), new TableField[] { EduInvoice.EDU_INVOICE.PAYMENT_ID }, true);
    public static final UniqueKey<EduPaymentRecord> KEY_EDU_PAYMENT_PRIMARY = Internal.createUniqueKey(EduPayment.EDU_PAYMENT, DSL.name("KEY_edu_payment_PRIMARY"), new TableField[] { EduPayment.EDU_PAYMENT.ID }, true);
    public static final UniqueKey<EduPaymentRecord> KEY_EDU_PAYMENT_UK_ORDER_NO = Internal.createUniqueKey(EduPayment.EDU_PAYMENT, DSL.name("KEY_edu_payment_uk_order_no"), new TableField[] { EduPayment.EDU_PAYMENT.ORDER_NO }, true);
    public static final UniqueKey<EduScheduleRecord> KEY_EDU_SCHEDULE_PRIMARY = Internal.createUniqueKey(EduSchedule.EDU_SCHEDULE, DSL.name("KEY_edu_schedule_PRIMARY"), new TableField[] { EduSchedule.EDU_SCHEDULE.ID }, true);
    public static final UniqueKey<EduStatisticsReportRecord> KEY_EDU_STATISTICS_REPORT_PRIMARY = Internal.createUniqueKey(EduStatisticsReport.EDU_STATISTICS_REPORT, DSL.name("KEY_edu_statistics_report_PRIMARY"), new TableField[] { EduStatisticsReport.EDU_STATISTICS_REPORT.ID }, true);
    public static final UniqueKey<EduStudentRecord> KEY_EDU_STUDENT_PRIMARY = Internal.createUniqueKey(EduStudent.EDU_STUDENT, DSL.name("KEY_edu_student_PRIMARY"), new TableField[] { EduStudent.EDU_STUDENT.ID }, true);
    public static final UniqueKey<EduStudentRecord> KEY_EDU_STUDENT_UK_CODE = Internal.createUniqueKey(EduStudent.EDU_STUDENT, DSL.name("KEY_edu_student_uk_code"), new TableField[] { EduStudent.EDU_STUDENT.CODE }, true);
    public static final UniqueKey<SysConfigRecord> KEY_SYS_CONFIG_PRIMARY = Internal.createUniqueKey(SysConfig.SYS_CONFIG, DSL.name("KEY_sys_config_PRIMARY"), new TableField[] { SysConfig.SYS_CONFIG.ID }, true);
    public static final UniqueKey<SysConfigRecord> KEY_SYS_CONFIG_UK_CONFIG_KEY = Internal.createUniqueKey(SysConfig.SYS_CONFIG, DSL.name("KEY_sys_config_uk_config_key"), new TableField[] { SysConfig.SYS_CONFIG.CONFIG_KEY }, true);
    public static final UniqueKey<SysDictDataRecord> KEY_SYS_DICT_DATA_PRIMARY = Internal.createUniqueKey(SysDictData.SYS_DICT_DATA, DSL.name("KEY_sys_dict_data_PRIMARY"), new TableField[] { SysDictData.SYS_DICT_DATA.ID }, true);
    public static final UniqueKey<SysDictTypeRecord> KEY_SYS_DICT_TYPE_PRIMARY = Internal.createUniqueKey(SysDictType.SYS_DICT_TYPE, DSL.name("KEY_sys_dict_type_PRIMARY"), new TableField[] { SysDictType.SYS_DICT_TYPE.ID }, true);
    public static final UniqueKey<SysDictTypeRecord> KEY_SYS_DICT_TYPE_UK_DICT_TYPE = Internal.createUniqueKey(SysDictType.SYS_DICT_TYPE, DSL.name("KEY_sys_dict_type_uk_dict_type"), new TableField[] { SysDictType.SYS_DICT_TYPE.DICT_TYPE }, true);
    public static final UniqueKey<SysLogRecord> KEY_SYS_LOG_PRIMARY = Internal.createUniqueKey(SysLog.SYS_LOG, DSL.name("KEY_sys_log_PRIMARY"), new TableField[] { SysLog.SYS_LOG.ID }, true);
    public static final UniqueKey<SysLoginLogRecord> KEY_SYS_LOGIN_LOG_PRIMARY = Internal.createUniqueKey(SysLoginLog.SYS_LOGIN_LOG, DSL.name("KEY_sys_login_log_PRIMARY"), new TableField[] { SysLoginLog.SYS_LOGIN_LOG.ID }, true);
    public static final UniqueKey<SysNoticeRecord> KEY_SYS_NOTICE_PRIMARY = Internal.createUniqueKey(SysNotice.SYS_NOTICE, DSL.name("KEY_sys_notice_PRIMARY"), new TableField[] { SysNotice.SYS_NOTICE.ID }, true);
    public static final UniqueKey<SysOperationLogRecord> KEY_SYS_OPERATION_LOG_PRIMARY = Internal.createUniqueKey(SysOperationLog.SYS_OPERATION_LOG, DSL.name("KEY_sys_operation_log_PRIMARY"), new TableField[] { SysOperationLog.SYS_OPERATION_LOG.ID }, true);
    public static final UniqueKey<SysPermissionRecord> KEY_SYS_PERMISSION_PRIMARY = Internal.createUniqueKey(SysPermission.SYS_PERMISSION, DSL.name("KEY_sys_permission_PRIMARY"), new TableField[] { SysPermission.SYS_PERMISSION.ID }, true);
    public static final UniqueKey<SysRoleRecord> KEY_SYS_ROLE_PRIMARY = Internal.createUniqueKey(SysRole.SYS_ROLE, DSL.name("KEY_sys_role_PRIMARY"), new TableField[] { SysRole.SYS_ROLE.ID }, true);
    public static final UniqueKey<SysRolePermissionRecord> KEY_SYS_ROLE_PERMISSION_PRIMARY = Internal.createUniqueKey(SysRolePermission.SYS_ROLE_PERMISSION, DSL.name("KEY_sys_role_permission_PRIMARY"), new TableField[] { SysRolePermission.SYS_ROLE_PERMISSION.ID }, true);
    public static final UniqueKey<SysRolePermissionRecord> KEY_SYS_ROLE_PERMISSION_UK_ROLE_PERMISSION = Internal.createUniqueKey(SysRolePermission.SYS_ROLE_PERMISSION, DSL.name("KEY_sys_role_permission_uk_role_permission"), new TableField[] { SysRolePermission.SYS_ROLE_PERMISSION.ROLE_ID, SysRolePermission.SYS_ROLE_PERMISSION.PERMISSION_ID }, true);
    public static final UniqueKey<SysUserRecord> KEY_SYS_USER_PRIMARY = Internal.createUniqueKey(SysUser.SYS_USER, DSL.name("KEY_sys_user_PRIMARY"), new TableField[] { SysUser.SYS_USER.ID }, true);
    public static final UniqueKey<SysUserRecord> KEY_SYS_USER_UK_PHONE = Internal.createUniqueKey(SysUser.SYS_USER, DSL.name("KEY_sys_user_uk_phone"), new TableField[] { SysUser.SYS_USER.PHONE }, true);
}
