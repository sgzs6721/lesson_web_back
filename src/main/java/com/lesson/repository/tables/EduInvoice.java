/*
 * This file is generated by jOOQ.
 */
package com.lesson.repository.tables;


import com.lesson.repository.Indexes;
import com.lesson.repository.Keys;
import com.lesson.repository.Lesson;
import com.lesson.repository.tables.records.EduInvoiceRecord;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row16;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 发票表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EduInvoice extends TableImpl<EduInvoiceRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>lesson.edu_invoice</code>
     */
    public static final EduInvoice EDU_INVOICE = new EduInvoice();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EduInvoiceRecord> getRecordType() {
        return EduInvoiceRecord.class;
    }

    /**
     * The column <code>lesson.edu_invoice.id</code>. 主键ID
     */
    public final TableField<EduInvoiceRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "主键ID");

    /**
     * The column <code>lesson.edu_invoice.payment_id</code>. 支付记录ID
     */
    public final TableField<EduInvoiceRecord, Long> PAYMENT_ID = createField(DSL.name("payment_id"), SQLDataType.BIGINT.nullable(false), this, "支付记录ID");

    /**
     * The column <code>lesson.edu_invoice.invoice_no</code>. 发票号码
     */
    public final TableField<EduInvoiceRecord, String> INVOICE_NO = createField(DSL.name("invoice_no"), SQLDataType.VARCHAR(50), this, "发票号码");

    /**
     * The column <code>lesson.edu_invoice.invoice_code</code>. 发票代码
     */
    public final TableField<EduInvoiceRecord, String> INVOICE_CODE = createField(DSL.name("invoice_code"), SQLDataType.VARCHAR(50), this, "发票代码");

    /**
     * The column <code>lesson.edu_invoice.invoice_type</code>. 发票类型：1-增值税普通发票，2-增值税专用发票
     */
    public final TableField<EduInvoiceRecord, Byte> INVOICE_TYPE = createField(DSL.name("invoice_type"), SQLDataType.TINYINT.nullable(false), this, "发票类型：1-增值税普通发票，2-增值税专用发票");

    /**
     * The column <code>lesson.edu_invoice.invoice_title</code>. 发票抬头
     */
    public final TableField<EduInvoiceRecord, String> INVOICE_TITLE = createField(DSL.name("invoice_title"), SQLDataType.VARCHAR(100).nullable(false), this, "发票抬头");

    /**
     * The column <code>lesson.edu_invoice.tax_number</code>. 税号
     */
    public final TableField<EduInvoiceRecord, String> TAX_NUMBER = createField(DSL.name("tax_number"), SQLDataType.VARCHAR(50), this, "税号");

    /**
     * The column <code>lesson.edu_invoice.amount</code>. 发票金额
     */
    public final TableField<EduInvoiceRecord, BigDecimal> AMOUNT = createField(DSL.name("amount"), SQLDataType.DECIMAL(10, 2).nullable(false), this, "发票金额");

    /**
     * The column <code>lesson.edu_invoice.issue_date</code>. 开票日期
     */
    public final TableField<EduInvoiceRecord, LocalDate> ISSUE_DATE = createField(DSL.name("issue_date"), SQLDataType.LOCALDATE, this, "开票日期");

    /**
     * The column <code>lesson.edu_invoice.status</code>. 状态：0-未开票，1-已开票，2-已作废
     */
    public final TableField<EduInvoiceRecord, Byte> STATUS = createField(DSL.name("status"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "状态：0-未开票，1-已开票，2-已作废");

    /**
     * The column <code>lesson.edu_invoice.remark</code>. 备注
     */
    public final TableField<EduInvoiceRecord, String> REMARK = createField(DSL.name("remark"), SQLDataType.VARCHAR(255), this, "备注");

    /**
     * The column <code>lesson.edu_invoice.created_at</code>. 创建时间
     */
    public final TableField<EduInvoiceRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "创建时间");

    /**
     * The column <code>lesson.edu_invoice.updated_at</code>. 更新时间
     */
    public final TableField<EduInvoiceRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "更新时间");

    /**
     * The column <code>lesson.edu_invoice.created_by</code>. 创建人ID
     */
    public final TableField<EduInvoiceRecord, Long> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.BIGINT, this, "创建人ID");

    /**
     * The column <code>lesson.edu_invoice.updated_by</code>. 更新人ID
     */
    public final TableField<EduInvoiceRecord, Long> UPDATED_BY = createField(DSL.name("updated_by"), SQLDataType.BIGINT, this, "更新人ID");

    /**
     * The column <code>lesson.edu_invoice.is_deleted</code>. 是否删除：0-未删除，1-已删除
     */
    public final TableField<EduInvoiceRecord, Byte> IS_DELETED = createField(DSL.name("is_deleted"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "是否删除：0-未删除，1-已删除");

    private EduInvoice(Name alias, Table<EduInvoiceRecord> aliased) {
        this(alias, aliased, null);
    }

    private EduInvoice(Name alias, Table<EduInvoiceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("发票表"), TableOptions.table());
    }

    /**
     * Create an aliased <code>lesson.edu_invoice</code> table reference
     */
    public EduInvoice(String alias) {
        this(DSL.name(alias), EDU_INVOICE);
    }

    /**
     * Create an aliased <code>lesson.edu_invoice</code> table reference
     */
    public EduInvoice(Name alias) {
        this(alias, EDU_INVOICE);
    }

    /**
     * Create a <code>lesson.edu_invoice</code> table reference
     */
    public EduInvoice() {
        this(DSL.name("edu_invoice"), null);
    }

    public <O extends Record> EduInvoice(Table<O> child, ForeignKey<O, EduInvoiceRecord> key) {
        super(child, key, EDU_INVOICE);
    }

    @Override
    public Schema getSchema() {
        return Lesson.LESSON;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.EDU_INVOICE_IDX_CREATED_AT, Indexes.EDU_INVOICE_IDX_INVOICE_CODE, Indexes.EDU_INVOICE_IDX_INVOICE_NO, Indexes.EDU_INVOICE_IDX_ISSUE_DATE);
    }

    @Override
    public Identity<EduInvoiceRecord, Long> getIdentity() {
        return (Identity<EduInvoiceRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<EduInvoiceRecord> getPrimaryKey() {
        return Keys.KEY_EDU_INVOICE_PRIMARY;
    }

    @Override
    public List<UniqueKey<EduInvoiceRecord>> getKeys() {
        return Arrays.<UniqueKey<EduInvoiceRecord>>asList(Keys.KEY_EDU_INVOICE_PRIMARY, Keys.KEY_EDU_INVOICE_UK_PAYMENT_ID);
    }

    @Override
    public EduInvoice as(String alias) {
        return new EduInvoice(DSL.name(alias), this);
    }

    @Override
    public EduInvoice as(Name alias) {
        return new EduInvoice(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EduInvoice rename(String name) {
        return new EduInvoice(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EduInvoice rename(Name name) {
        return new EduInvoice(name, null);
    }

    // -------------------------------------------------------------------------
    // Row16 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row16<Long, Long, String, String, Byte, String, String, BigDecimal, LocalDate, Byte, String, LocalDateTime, LocalDateTime, Long, Long, Byte> fieldsRow() {
        return (Row16) super.fieldsRow();
    }
}
