/*
 * This file is generated by jOOQ.
 */
package com.lesson.repository.tables.records;


import com.lesson.repository.tables.SysDictData;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 字典数据表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysDictDataRecord extends UpdatableRecordImpl<SysDictDataRecord> implements Record12<Long, String, String, String, Integer, Byte, String, LocalDateTime, LocalDateTime, Long, Long, Byte> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>lesson.sys_dict_data.id</code>. 主键ID
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>lesson.sys_dict_data.id</code>. 主键ID
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>lesson.sys_dict_data.dict_type</code>. 字典类型
     */
    public void setDictType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>lesson.sys_dict_data.dict_type</code>. 字典类型
     */
    public String getDictType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>lesson.sys_dict_data.dict_label</code>. 字典标签
     */
    public void setDictLabel(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>lesson.sys_dict_data.dict_label</code>. 字典标签
     */
    public String getDictLabel() {
        return (String) get(2);
    }

    /**
     * Setter for <code>lesson.sys_dict_data.dict_value</code>. 字典键值
     */
    public void setDictValue(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>lesson.sys_dict_data.dict_value</code>. 字典键值
     */
    public String getDictValue() {
        return (String) get(3);
    }

    /**
     * Setter for <code>lesson.sys_dict_data.dict_sort</code>. 字典排序
     */
    public void setDictSort(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>lesson.sys_dict_data.dict_sort</code>. 字典排序
     */
    public Integer getDictSort() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>lesson.sys_dict_data.status</code>. 状态：0-禁用，1-启用
     */
    public void setStatus(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>lesson.sys_dict_data.status</code>. 状态：0-禁用，1-启用
     */
    public Byte getStatus() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>lesson.sys_dict_data.remark</code>. 备注
     */
    public void setRemark(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>lesson.sys_dict_data.remark</code>. 备注
     */
    public String getRemark() {
        return (String) get(6);
    }

    /**
     * Setter for <code>lesson.sys_dict_data.created_at</code>. 创建时间
     */
    public void setCreatedAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>lesson.sys_dict_data.created_at</code>. 创建时间
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>lesson.sys_dict_data.updated_at</code>. 更新时间
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>lesson.sys_dict_data.updated_at</code>. 更新时间
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>lesson.sys_dict_data.created_by</code>. 创建人ID
     */
    public void setCreatedBy(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>lesson.sys_dict_data.created_by</code>. 创建人ID
     */
    public Long getCreatedBy() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>lesson.sys_dict_data.updated_by</code>. 更新人ID
     */
    public void setUpdatedBy(Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>lesson.sys_dict_data.updated_by</code>. 更新人ID
     */
    public Long getUpdatedBy() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>lesson.sys_dict_data.is_deleted</code>. 是否删除：0-未删除，1-已删除
     */
    public void setIsDeleted(Byte value) {
        set(11, value);
    }

    /**
     * Getter for <code>lesson.sys_dict_data.is_deleted</code>. 是否删除：0-未删除，1-已删除
     */
    public Byte getIsDeleted() {
        return (Byte) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Long, String, String, String, Integer, Byte, String, LocalDateTime, LocalDateTime, Long, Long, Byte> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Long, String, String, String, Integer, Byte, String, LocalDateTime, LocalDateTime, Long, Long, Byte> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return SysDictData.SYS_DICT_DATA.ID;
    }

    @Override
    public Field<String> field2() {
        return SysDictData.SYS_DICT_DATA.DICT_TYPE;
    }

    @Override
    public Field<String> field3() {
        return SysDictData.SYS_DICT_DATA.DICT_LABEL;
    }

    @Override
    public Field<String> field4() {
        return SysDictData.SYS_DICT_DATA.DICT_VALUE;
    }

    @Override
    public Field<Integer> field5() {
        return SysDictData.SYS_DICT_DATA.DICT_SORT;
    }

    @Override
    public Field<Byte> field6() {
        return SysDictData.SYS_DICT_DATA.STATUS;
    }

    @Override
    public Field<String> field7() {
        return SysDictData.SYS_DICT_DATA.REMARK;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return SysDictData.SYS_DICT_DATA.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return SysDictData.SYS_DICT_DATA.UPDATED_AT;
    }

    @Override
    public Field<Long> field10() {
        return SysDictData.SYS_DICT_DATA.CREATED_BY;
    }

    @Override
    public Field<Long> field11() {
        return SysDictData.SYS_DICT_DATA.UPDATED_BY;
    }

    @Override
    public Field<Byte> field12() {
        return SysDictData.SYS_DICT_DATA.IS_DELETED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getDictType();
    }

    @Override
    public String component3() {
        return getDictLabel();
    }

    @Override
    public String component4() {
        return getDictValue();
    }

    @Override
    public Integer component5() {
        return getDictSort();
    }

    @Override
    public Byte component6() {
        return getStatus();
    }

    @Override
    public String component7() {
        return getRemark();
    }

    @Override
    public LocalDateTime component8() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component9() {
        return getUpdatedAt();
    }

    @Override
    public Long component10() {
        return getCreatedBy();
    }

    @Override
    public Long component11() {
        return getUpdatedBy();
    }

    @Override
    public Byte component12() {
        return getIsDeleted();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getDictType();
    }

    @Override
    public String value3() {
        return getDictLabel();
    }

    @Override
    public String value4() {
        return getDictValue();
    }

    @Override
    public Integer value5() {
        return getDictSort();
    }

    @Override
    public Byte value6() {
        return getStatus();
    }

    @Override
    public String value7() {
        return getRemark();
    }

    @Override
    public LocalDateTime value8() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value9() {
        return getUpdatedAt();
    }

    @Override
    public Long value10() {
        return getCreatedBy();
    }

    @Override
    public Long value11() {
        return getUpdatedBy();
    }

    @Override
    public Byte value12() {
        return getIsDeleted();
    }

    @Override
    public SysDictDataRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public SysDictDataRecord value2(String value) {
        setDictType(value);
        return this;
    }

    @Override
    public SysDictDataRecord value3(String value) {
        setDictLabel(value);
        return this;
    }

    @Override
    public SysDictDataRecord value4(String value) {
        setDictValue(value);
        return this;
    }

    @Override
    public SysDictDataRecord value5(Integer value) {
        setDictSort(value);
        return this;
    }

    @Override
    public SysDictDataRecord value6(Byte value) {
        setStatus(value);
        return this;
    }

    @Override
    public SysDictDataRecord value7(String value) {
        setRemark(value);
        return this;
    }

    @Override
    public SysDictDataRecord value8(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public SysDictDataRecord value9(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public SysDictDataRecord value10(Long value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public SysDictDataRecord value11(Long value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public SysDictDataRecord value12(Byte value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public SysDictDataRecord values(Long value1, String value2, String value3, String value4, Integer value5, Byte value6, String value7, LocalDateTime value8, LocalDateTime value9, Long value10, Long value11, Byte value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SysDictDataRecord
     */
    public SysDictDataRecord() {
        super(SysDictData.SYS_DICT_DATA);
    }

    /**
     * Create a detached, initialised SysDictDataRecord
     */
    public SysDictDataRecord(Long id, String dictType, String dictLabel, String dictValue, Integer dictSort, Byte status, String remark, LocalDateTime createdAt, LocalDateTime updatedAt, Long createdBy, Long updatedBy, Byte isDeleted) {
        super(SysDictData.SYS_DICT_DATA);

        setId(id);
        setDictType(dictType);
        setDictLabel(dictLabel);
        setDictValue(dictValue);
        setDictSort(dictSort);
        setStatus(status);
        setRemark(remark);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setCreatedBy(createdBy);
        setUpdatedBy(updatedBy);
        setIsDeleted(isDeleted);
    }
}
