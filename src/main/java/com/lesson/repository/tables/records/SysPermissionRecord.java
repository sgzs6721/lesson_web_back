/*
 * This file is generated by jOOQ.
 */
package com.lesson.repository.tables.records;


import com.lesson.repository.tables.SysPermission;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 系统权限表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysPermissionRecord extends UpdatableRecordImpl<SysPermissionRecord> implements Record15<Long, Long, String, String, Byte, String, String, String, Integer, Byte, LocalDateTime, LocalDateTime, Long, Long, Byte> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>lesson.sys_permission.id</code>. 主键ID
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>lesson.sys_permission.id</code>. 主键ID
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>lesson.sys_permission.parent_id</code>. 父权限ID
     */
    public void setParentId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>lesson.sys_permission.parent_id</code>. 父权限ID
     */
    public Long getParentId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>lesson.sys_permission.permission_name</code>. 权限名称
     */
    public void setPermissionName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>lesson.sys_permission.permission_name</code>. 权限名称
     */
    public String getPermissionName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>lesson.sys_permission.permission_code</code>. 权限编码
     */
    public void setPermissionCode(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>lesson.sys_permission.permission_code</code>. 权限编码
     */
    public String getPermissionCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>lesson.sys_permission.permission_type</code>. 权限类型：1-菜单，2-按钮，3-接口
     */
    public void setPermissionType(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>lesson.sys_permission.permission_type</code>. 权限类型：1-菜单，2-按钮，3-接口
     */
    public Byte getPermissionType() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>lesson.sys_permission.path</code>. 路径
     */
    public void setPath(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>lesson.sys_permission.path</code>. 路径
     */
    public String getPath() {
        return (String) get(5);
    }

    /**
     * Setter for <code>lesson.sys_permission.component</code>. 前端组件
     */
    public void setComponent(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>lesson.sys_permission.component</code>. 前端组件
     */
    public String getComponent() {
        return (String) get(6);
    }

    /**
     * Setter for <code>lesson.sys_permission.icon</code>. 图标
     */
    public void setIcon(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>lesson.sys_permission.icon</code>. 图标
     */
    public String getIcon() {
        return (String) get(7);
    }

    /**
     * Setter for <code>lesson.sys_permission.sort</code>. 排序
     */
    public void setSort(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>lesson.sys_permission.sort</code>. 排序
     */
    public Integer getSort() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>lesson.sys_permission.status</code>. 状态：0-禁用，1-启用
     */
    public void setStatus(Byte value) {
        set(9, value);
    }

    /**
     * Getter for <code>lesson.sys_permission.status</code>. 状态：0-禁用，1-启用
     */
    public Byte getStatus() {
        return (Byte) get(9);
    }

    /**
     * Setter for <code>lesson.sys_permission.created_at</code>. 创建时间
     */
    public void setCreatedAt(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>lesson.sys_permission.created_at</code>. 创建时间
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for <code>lesson.sys_permission.updated_at</code>. 更新时间
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(11, value);
    }

    /**
     * Getter for <code>lesson.sys_permission.updated_at</code>. 更新时间
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>lesson.sys_permission.created_by</code>. 创建人ID
     */
    public void setCreatedBy(Long value) {
        set(12, value);
    }

    /**
     * Getter for <code>lesson.sys_permission.created_by</code>. 创建人ID
     */
    public Long getCreatedBy() {
        return (Long) get(12);
    }

    /**
     * Setter for <code>lesson.sys_permission.updated_by</code>. 更新人ID
     */
    public void setUpdatedBy(Long value) {
        set(13, value);
    }

    /**
     * Getter for <code>lesson.sys_permission.updated_by</code>. 更新人ID
     */
    public Long getUpdatedBy() {
        return (Long) get(13);
    }

    /**
     * Setter for <code>lesson.sys_permission.is_deleted</code>. 是否删除：0-未删除，1-已删除
     */
    public void setIsDeleted(Byte value) {
        set(14, value);
    }

    /**
     * Getter for <code>lesson.sys_permission.is_deleted</code>. 是否删除：0-未删除，1-已删除
     */
    public Byte getIsDeleted() {
        return (Byte) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row15<Long, Long, String, String, Byte, String, String, String, Integer, Byte, LocalDateTime, LocalDateTime, Long, Long, Byte> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    @Override
    public Row15<Long, Long, String, String, Byte, String, String, String, Integer, Byte, LocalDateTime, LocalDateTime, Long, Long, Byte> valuesRow() {
        return (Row15) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return SysPermission.SYS_PERMISSION.ID;
    }

    @Override
    public Field<Long> field2() {
        return SysPermission.SYS_PERMISSION.PARENT_ID;
    }

    @Override
    public Field<String> field3() {
        return SysPermission.SYS_PERMISSION.PERMISSION_NAME;
    }

    @Override
    public Field<String> field4() {
        return SysPermission.SYS_PERMISSION.PERMISSION_CODE;
    }

    @Override
    public Field<Byte> field5() {
        return SysPermission.SYS_PERMISSION.PERMISSION_TYPE;
    }

    @Override
    public Field<String> field6() {
        return SysPermission.SYS_PERMISSION.PATH;
    }

    @Override
    public Field<String> field7() {
        return SysPermission.SYS_PERMISSION.COMPONENT;
    }

    @Override
    public Field<String> field8() {
        return SysPermission.SYS_PERMISSION.ICON;
    }

    @Override
    public Field<Integer> field9() {
        return SysPermission.SYS_PERMISSION.SORT;
    }

    @Override
    public Field<Byte> field10() {
        return SysPermission.SYS_PERMISSION.STATUS;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return SysPermission.SYS_PERMISSION.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field12() {
        return SysPermission.SYS_PERMISSION.UPDATED_AT;
    }

    @Override
    public Field<Long> field13() {
        return SysPermission.SYS_PERMISSION.CREATED_BY;
    }

    @Override
    public Field<Long> field14() {
        return SysPermission.SYS_PERMISSION.UPDATED_BY;
    }

    @Override
    public Field<Byte> field15() {
        return SysPermission.SYS_PERMISSION.IS_DELETED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getParentId();
    }

    @Override
    public String component3() {
        return getPermissionName();
    }

    @Override
    public String component4() {
        return getPermissionCode();
    }

    @Override
    public Byte component5() {
        return getPermissionType();
    }

    @Override
    public String component6() {
        return getPath();
    }

    @Override
    public String component7() {
        return getComponent();
    }

    @Override
    public String component8() {
        return getIcon();
    }

    @Override
    public Integer component9() {
        return getSort();
    }

    @Override
    public Byte component10() {
        return getStatus();
    }

    @Override
    public LocalDateTime component11() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component12() {
        return getUpdatedAt();
    }

    @Override
    public Long component13() {
        return getCreatedBy();
    }

    @Override
    public Long component14() {
        return getUpdatedBy();
    }

    @Override
    public Byte component15() {
        return getIsDeleted();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getParentId();
    }

    @Override
    public String value3() {
        return getPermissionName();
    }

    @Override
    public String value4() {
        return getPermissionCode();
    }

    @Override
    public Byte value5() {
        return getPermissionType();
    }

    @Override
    public String value6() {
        return getPath();
    }

    @Override
    public String value7() {
        return getComponent();
    }

    @Override
    public String value8() {
        return getIcon();
    }

    @Override
    public Integer value9() {
        return getSort();
    }

    @Override
    public Byte value10() {
        return getStatus();
    }

    @Override
    public LocalDateTime value11() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value12() {
        return getUpdatedAt();
    }

    @Override
    public Long value13() {
        return getCreatedBy();
    }

    @Override
    public Long value14() {
        return getUpdatedBy();
    }

    @Override
    public Byte value15() {
        return getIsDeleted();
    }

    @Override
    public SysPermissionRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public SysPermissionRecord value2(Long value) {
        setParentId(value);
        return this;
    }

    @Override
    public SysPermissionRecord value3(String value) {
        setPermissionName(value);
        return this;
    }

    @Override
    public SysPermissionRecord value4(String value) {
        setPermissionCode(value);
        return this;
    }

    @Override
    public SysPermissionRecord value5(Byte value) {
        setPermissionType(value);
        return this;
    }

    @Override
    public SysPermissionRecord value6(String value) {
        setPath(value);
        return this;
    }

    @Override
    public SysPermissionRecord value7(String value) {
        setComponent(value);
        return this;
    }

    @Override
    public SysPermissionRecord value8(String value) {
        setIcon(value);
        return this;
    }

    @Override
    public SysPermissionRecord value9(Integer value) {
        setSort(value);
        return this;
    }

    @Override
    public SysPermissionRecord value10(Byte value) {
        setStatus(value);
        return this;
    }

    @Override
    public SysPermissionRecord value11(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public SysPermissionRecord value12(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public SysPermissionRecord value13(Long value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public SysPermissionRecord value14(Long value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public SysPermissionRecord value15(Byte value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public SysPermissionRecord values(Long value1, Long value2, String value3, String value4, Byte value5, String value6, String value7, String value8, Integer value9, Byte value10, LocalDateTime value11, LocalDateTime value12, Long value13, Long value14, Byte value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SysPermissionRecord
     */
    public SysPermissionRecord() {
        super(SysPermission.SYS_PERMISSION);
    }

    /**
     * Create a detached, initialised SysPermissionRecord
     */
    public SysPermissionRecord(Long id, Long parentId, String permissionName, String permissionCode, Byte permissionType, String path, String component, String icon, Integer sort, Byte status, LocalDateTime createdAt, LocalDateTime updatedAt, Long createdBy, Long updatedBy, Byte isDeleted) {
        super(SysPermission.SYS_PERMISSION);

        setId(id);
        setParentId(parentId);
        setPermissionName(permissionName);
        setPermissionCode(permissionCode);
        setPermissionType(permissionType);
        setPath(path);
        setComponent(component);
        setIcon(icon);
        setSort(sort);
        setStatus(status);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setCreatedBy(createdBy);
        setUpdatedBy(updatedBy);
        setIsDeleted(isDeleted);
    }
}
