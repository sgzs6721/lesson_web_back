/*
 * This file is generated by jOOQ.
 */
package com.lesson.repository.tables;


import com.lesson.repository.Indexes;
import com.lesson.repository.Keys;
import com.lesson.repository.Lesson;
import com.lesson.repository.tables.records.SysNoticeRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 通知公告表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysNotice extends TableImpl<SysNoticeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>lesson.sys_notice</code>
     */
    public static final SysNotice SYS_NOTICE = new SysNotice();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysNoticeRecord> getRecordType() {
        return SysNoticeRecord.class;
    }

    /**
     * The column <code>lesson.sys_notice.id</code>. 主键ID
     */
    public final TableField<SysNoticeRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "主键ID");

    /**
     * The column <code>lesson.sys_notice.notice_title</code>. 公告标题
     */
    public final TableField<SysNoticeRecord, String> NOTICE_TITLE = createField(DSL.name("notice_title"), SQLDataType.VARCHAR(100).nullable(false), this, "公告标题");

    /**
     * The column <code>lesson.sys_notice.notice_type</code>. 公告类型：1-通知，2-公告
     */
    public final TableField<SysNoticeRecord, Byte> NOTICE_TYPE = createField(DSL.name("notice_type"), SQLDataType.TINYINT.nullable(false), this, "公告类型：1-通知，2-公告");

    /**
     * The column <code>lesson.sys_notice.notice_content</code>. 公告内容
     */
    public final TableField<SysNoticeRecord, String> NOTICE_CONTENT = createField(DSL.name("notice_content"), SQLDataType.CLOB.nullable(false), this, "公告内容");

    /**
     * The column <code>lesson.sys_notice.status</code>. 状态：0-关闭，1-正常
     */
    public final TableField<SysNoticeRecord, Byte> STATUS = createField(DSL.name("status"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("1", SQLDataType.TINYINT)), this, "状态：0-关闭，1-正常");

    /**
     * The column <code>lesson.sys_notice.remark</code>. 备注
     */
    public final TableField<SysNoticeRecord, String> REMARK = createField(DSL.name("remark"), SQLDataType.VARCHAR(255), this, "备注");

    /**
     * The column <code>lesson.sys_notice.created_at</code>. 创建时间
     */
    public final TableField<SysNoticeRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "创建时间");

    /**
     * The column <code>lesson.sys_notice.updated_at</code>. 更新时间
     */
    public final TableField<SysNoticeRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "更新时间");

    /**
     * The column <code>lesson.sys_notice.created_by</code>. 创建人ID
     */
    public final TableField<SysNoticeRecord, Long> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.BIGINT, this, "创建人ID");

    /**
     * The column <code>lesson.sys_notice.updated_by</code>. 更新人ID
     */
    public final TableField<SysNoticeRecord, Long> UPDATED_BY = createField(DSL.name("updated_by"), SQLDataType.BIGINT, this, "更新人ID");

    /**
     * The column <code>lesson.sys_notice.is_deleted</code>. 是否删除：0-未删除，1-已删除
     */
    public final TableField<SysNoticeRecord, Byte> IS_DELETED = createField(DSL.name("is_deleted"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "是否删除：0-未删除，1-已删除");

    private SysNotice(Name alias, Table<SysNoticeRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysNotice(Name alias, Table<SysNoticeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("通知公告表"), TableOptions.table());
    }

    /**
     * Create an aliased <code>lesson.sys_notice</code> table reference
     */
    public SysNotice(String alias) {
        this(DSL.name(alias), SYS_NOTICE);
    }

    /**
     * Create an aliased <code>lesson.sys_notice</code> table reference
     */
    public SysNotice(Name alias) {
        this(alias, SYS_NOTICE);
    }

    /**
     * Create a <code>lesson.sys_notice</code> table reference
     */
    public SysNotice() {
        this(DSL.name("sys_notice"), null);
    }

    public <O extends Record> SysNotice(Table<O> child, ForeignKey<O, SysNoticeRecord> key) {
        super(child, key, SYS_NOTICE);
    }

    @Override
    public Schema getSchema() {
        return Lesson.LESSON;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SYS_NOTICE_IDX_CREATED_AT, Indexes.SYS_NOTICE_IDX_NOTICE_TYPE, Indexes.SYS_NOTICE_IDX_STATUS);
    }

    @Override
    public Identity<SysNoticeRecord, Long> getIdentity() {
        return (Identity<SysNoticeRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<SysNoticeRecord> getPrimaryKey() {
        return Keys.KEY_SYS_NOTICE_PRIMARY;
    }

    @Override
    public List<UniqueKey<SysNoticeRecord>> getKeys() {
        return Arrays.<UniqueKey<SysNoticeRecord>>asList(Keys.KEY_SYS_NOTICE_PRIMARY);
    }

    @Override
    public SysNotice as(String alias) {
        return new SysNotice(DSL.name(alias), this);
    }

    @Override
    public SysNotice as(Name alias) {
        return new SysNotice(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysNotice rename(String name) {
        return new SysNotice(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysNotice rename(Name name) {
        return new SysNotice(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, String, Byte, String, Byte, String, LocalDateTime, LocalDateTime, Long, Long, Byte> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
