/*
 * This file is generated by jOOQ.
 */
package com.lesson.repository.tables;


import com.lesson.repository.Indexes;
import com.lesson.repository.Keys;
import com.lesson.repository.Lesson;
import com.lesson.repository.tables.records.SysPermissionRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 系统权限表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysPermission extends TableImpl<SysPermissionRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>lesson.sys_permission</code>
     */
    public static final SysPermission SYS_PERMISSION = new SysPermission();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysPermissionRecord> getRecordType() {
        return SysPermissionRecord.class;
    }

    /**
     * The column <code>lesson.sys_permission.id</code>. 主键ID
     */
    public final TableField<SysPermissionRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "主键ID");

    /**
     * The column <code>lesson.sys_permission.parent_id</code>. 父权限ID
     */
    public final TableField<SysPermissionRecord, Long> PARENT_ID = createField(DSL.name("parent_id"), SQLDataType.BIGINT, this, "父权限ID");

    /**
     * The column <code>lesson.sys_permission.permission_name</code>. 权限名称
     */
    public final TableField<SysPermissionRecord, String> PERMISSION_NAME = createField(DSL.name("permission_name"), SQLDataType.VARCHAR(50).nullable(false), this, "权限名称");

    /**
     * The column <code>lesson.sys_permission.permission_type</code>. 权限类型：1-菜单，2-按钮，3-接口
     */
    public final TableField<SysPermissionRecord, Byte> PERMISSION_TYPE = createField(DSL.name("permission_type"), SQLDataType.TINYINT.nullable(false), this, "权限类型：1-菜单，2-按钮，3-接口");

    /**
     * The column <code>lesson.sys_permission.path</code>. 路径
     */
    public final TableField<SysPermissionRecord, String> PATH = createField(DSL.name("path"), SQLDataType.VARCHAR(255), this, "路径");

    /**
     * The column <code>lesson.sys_permission.component</code>. 前端组件
     */
    public final TableField<SysPermissionRecord, String> COMPONENT = createField(DSL.name("component"), SQLDataType.VARCHAR(255), this, "前端组件");

    /**
     * The column <code>lesson.sys_permission.icon</code>. 图标
     */
    public final TableField<SysPermissionRecord, String> ICON = createField(DSL.name("icon"), SQLDataType.VARCHAR(100), this, "图标");

    /**
     * The column <code>lesson.sys_permission.sort</code>. 排序
     */
    public final TableField<SysPermissionRecord, Integer> SORT = createField(DSL.name("sort"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "排序");

    /**
     * The column <code>lesson.sys_permission.status</code>. 状态：0-禁用，1-启用
     */
    public final TableField<SysPermissionRecord, Byte> STATUS = createField(DSL.name("status"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("1", SQLDataType.TINYINT)), this, "状态：0-禁用，1-启用");

    /**
     * The column <code>lesson.sys_permission.create_time</code>. 创建时间
     */
    public final TableField<SysPermissionRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "创建时间");

    /**
     * The column <code>lesson.sys_permission.update_time</code>. 更新时间
     */
    public final TableField<SysPermissionRecord, LocalDateTime> UPDATE_TIME = createField(DSL.name("update_time"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "更新时间");

    /**
     * The column <code>lesson.sys_permission.deleted</code>. 是否删除：0-未删除，1-已删除
     */
    public final TableField<SysPermissionRecord, Byte> DELETED = createField(DSL.name("deleted"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "是否删除：0-未删除，1-已删除");

    private SysPermission(Name alias, Table<SysPermissionRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysPermission(Name alias, Table<SysPermissionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("系统权限表"), TableOptions.table());
    }

    /**
     * Create an aliased <code>lesson.sys_permission</code> table reference
     */
    public SysPermission(String alias) {
        this(DSL.name(alias), SYS_PERMISSION);
    }

    /**
     * Create an aliased <code>lesson.sys_permission</code> table reference
     */
    public SysPermission(Name alias) {
        this(alias, SYS_PERMISSION);
    }

    /**
     * Create a <code>lesson.sys_permission</code> table reference
     */
    public SysPermission() {
        this(DSL.name("sys_permission"), null);
    }

    public <O extends Record> SysPermission(Table<O> child, ForeignKey<O, SysPermissionRecord> key) {
        super(child, key, SYS_PERMISSION);
    }

    @Override
    public Schema getSchema() {
        return Lesson.LESSON;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SYS_PERMISSION_IDX_PARENT_ID);
    }

    @Override
    public Identity<SysPermissionRecord, Long> getIdentity() {
        return (Identity<SysPermissionRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<SysPermissionRecord> getPrimaryKey() {
        return Keys.KEY_SYS_PERMISSION_PRIMARY;
    }

    @Override
    public List<UniqueKey<SysPermissionRecord>> getKeys() {
        return Arrays.<UniqueKey<SysPermissionRecord>>asList(Keys.KEY_SYS_PERMISSION_PRIMARY);
    }

    @Override
    public SysPermission as(String alias) {
        return new SysPermission(DSL.name(alias), this);
    }

    @Override
    public SysPermission as(Name alias) {
        return new SysPermission(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysPermission rename(String name) {
        return new SysPermission(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysPermission rename(Name name) {
        return new SysPermission(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<Long, Long, String, Byte, String, String, String, Integer, Byte, LocalDateTime, LocalDateTime, Byte> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
