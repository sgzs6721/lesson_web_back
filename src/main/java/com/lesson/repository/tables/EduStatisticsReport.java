/*
 * This file is generated by jOOQ.
 */
package com.lesson.repository.tables;


import com.lesson.repository.Indexes;
import com.lesson.repository.Keys;
import com.lesson.repository.Lesson;
import com.lesson.repository.tables.records.EduStatisticsReportRecord;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.JSON;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 统计报表表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EduStatisticsReport extends TableImpl<EduStatisticsReportRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>lesson.edu_statistics_report</code>
     */
    public static final EduStatisticsReport EDU_STATISTICS_REPORT = new EduStatisticsReport();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EduStatisticsReportRecord> getRecordType() {
        return EduStatisticsReportRecord.class;
    }

    /**
     * The column <code>lesson.edu_statistics_report.id</code>. 主键ID
     */
    public final TableField<EduStatisticsReportRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "主键ID");

    /**
     * The column <code>lesson.edu_statistics_report.institution_id</code>. 所属机构ID
     */
    public final TableField<EduStatisticsReportRecord, Long> INSTITUTION_ID = createField(DSL.name("institution_id"), SQLDataType.BIGINT.nullable(false), this, "所属机构ID");

    /**
     * The column <code>lesson.edu_statistics_report.report_type</code>. 报表类型：1-收入统计，2-支出统计，3-学员统计，4-课程统计，5-考勤统计
     */
    public final TableField<EduStatisticsReportRecord, Byte> REPORT_TYPE = createField(DSL.name("report_type"), SQLDataType.TINYINT.nullable(false), this, "报表类型：1-收入统计，2-支出统计，3-学员统计，4-课程统计，5-考勤统计");

    /**
     * The column <code>lesson.edu_statistics_report.report_name</code>. 报表名称
     */
    public final TableField<EduStatisticsReportRecord, String> REPORT_NAME = createField(DSL.name("report_name"), SQLDataType.VARCHAR(100).nullable(false), this, "报表名称");

    /**
     * The column <code>lesson.edu_statistics_report.report_period</code>. 统计周期：daily-日，weekly-周，monthly-月，quarterly-季，yearly-年
     */
    public final TableField<EduStatisticsReportRecord, String> REPORT_PERIOD = createField(DSL.name("report_period"), SQLDataType.VARCHAR(20).nullable(false), this, "统计周期：daily-日，weekly-周，monthly-月，quarterly-季，yearly-年");

    /**
     * The column <code>lesson.edu_statistics_report.start_date</code>. 开始日期
     */
    public final TableField<EduStatisticsReportRecord, LocalDate> START_DATE = createField(DSL.name("start_date"), SQLDataType.LOCALDATE.nullable(false), this, "开始日期");

    /**
     * The column <code>lesson.edu_statistics_report.end_date</code>. 结束日期
     */
    public final TableField<EduStatisticsReportRecord, LocalDate> END_DATE = createField(DSL.name("end_date"), SQLDataType.LOCALDATE.nullable(false), this, "结束日期");

    /**
     * The column <code>lesson.edu_statistics_report.data</code>. 统计数据(JSON)
     */
    public final TableField<EduStatisticsReportRecord, JSON> DATA = createField(DSL.name("data"), SQLDataType.JSON.nullable(false), this, "统计数据(JSON)");

    /**
     * The column <code>lesson.edu_statistics_report.created_at</code>. 创建时间
     */
    public final TableField<EduStatisticsReportRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "创建时间");

    /**
     * The column <code>lesson.edu_statistics_report.updated_at</code>. 更新时间
     */
    public final TableField<EduStatisticsReportRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "更新时间");

    /**
     * The column <code>lesson.edu_statistics_report.created_by</code>. 创建人ID
     */
    public final TableField<EduStatisticsReportRecord, Long> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.BIGINT, this, "创建人ID");

    /**
     * The column <code>lesson.edu_statistics_report.updated_by</code>. 更新人ID
     */
    public final TableField<EduStatisticsReportRecord, Long> UPDATED_BY = createField(DSL.name("updated_by"), SQLDataType.BIGINT, this, "更新人ID");

    /**
     * The column <code>lesson.edu_statistics_report.is_deleted</code>. 是否删除：0-未删除，1-已删除
     */
    public final TableField<EduStatisticsReportRecord, Byte> IS_DELETED = createField(DSL.name("is_deleted"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "是否删除：0-未删除，1-已删除");

    private EduStatisticsReport(Name alias, Table<EduStatisticsReportRecord> aliased) {
        this(alias, aliased, null);
    }

    private EduStatisticsReport(Name alias, Table<EduStatisticsReportRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("统计报表表"), TableOptions.table());
    }

    /**
     * Create an aliased <code>lesson.edu_statistics_report</code> table reference
     */
    public EduStatisticsReport(String alias) {
        this(DSL.name(alias), EDU_STATISTICS_REPORT);
    }

    /**
     * Create an aliased <code>lesson.edu_statistics_report</code> table reference
     */
    public EduStatisticsReport(Name alias) {
        this(alias, EDU_STATISTICS_REPORT);
    }

    /**
     * Create a <code>lesson.edu_statistics_report</code> table reference
     */
    public EduStatisticsReport() {
        this(DSL.name("edu_statistics_report"), null);
    }

    public <O extends Record> EduStatisticsReport(Table<O> child, ForeignKey<O, EduStatisticsReportRecord> key) {
        super(child, key, EDU_STATISTICS_REPORT);
    }

    @Override
    public Schema getSchema() {
        return Lesson.LESSON;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.EDU_STATISTICS_REPORT_IDX_CREATED_AT, Indexes.EDU_STATISTICS_REPORT_IDX_END_DATE, Indexes.EDU_STATISTICS_REPORT_IDX_INSTITUTION_ID, Indexes.EDU_STATISTICS_REPORT_IDX_REPORT_PERIOD, Indexes.EDU_STATISTICS_REPORT_IDX_REPORT_TYPE, Indexes.EDU_STATISTICS_REPORT_IDX_START_DATE);
    }

    @Override
    public Identity<EduStatisticsReportRecord, Long> getIdentity() {
        return (Identity<EduStatisticsReportRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<EduStatisticsReportRecord> getPrimaryKey() {
        return Keys.KEY_EDU_STATISTICS_REPORT_PRIMARY;
    }

    @Override
    public List<UniqueKey<EduStatisticsReportRecord>> getKeys() {
        return Arrays.<UniqueKey<EduStatisticsReportRecord>>asList(Keys.KEY_EDU_STATISTICS_REPORT_PRIMARY);
    }

    @Override
    public EduStatisticsReport as(String alias) {
        return new EduStatisticsReport(DSL.name(alias), this);
    }

    @Override
    public EduStatisticsReport as(Name alias) {
        return new EduStatisticsReport(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EduStatisticsReport rename(String name) {
        return new EduStatisticsReport(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EduStatisticsReport rename(Name name) {
        return new EduStatisticsReport(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<Long, Long, Byte, String, String, LocalDate, LocalDate, JSON, LocalDateTime, LocalDateTime, Long, Long, Byte> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
